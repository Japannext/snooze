---
name: default

transform_rules:
- name: jnx-naming-convention
  description: |
    Extract the different elements from the Japannext naming convention
  if: 'alert.Source.Kind == "otlp" && alert.Labels["host.name"] =~ "[a-z]{3}[0-9][a-z]+[0-9]+"'
  childs:
  - set:
      target: 'alert.Label["jnx.domain"]'
      value: 'japannext.co.jp'
  - regex:
      source: 'alert.Label["host.name"]'
      pattern: '(?P<prefix>[a-z]{3}[0-9])(?P<server_role>[a-z]+)(?P<nodenum>[0-9]+)'
      targets:
        prefix: 'alert.Labels["jnx.prefix"]'
        server_role: 'alert.Labels["jnx.server_role"]'
        nodenum: 'alert.Labels["jnx.nodenum"]'
  - group_by:
      fields:
      - 'alert.Labels["jnx.prefix"]'
      - 'alert.Labels["jnx.server_role"]'
      - 'alert.Labels["process.name"]'

silence_rules:
- if: 'labels[process.name] = "icingaweb" and body[message] =~ "connection reset"'
- if: 'labels[host.name] =~ "^mmi1"'
  weekly_schedule:
    from: {day: friday, time: '17:30'}
    to: {day: monday, time: '07:00'}
- if: 'labels[process.name] =~ "myapp"'
  daily_schedule:
    from: {time: '10:00'}
    to: {time: '17:00'}

grouping_rules:
- if: 'has labels[jnx.service]'
  group_by: ['labels[jnx.service]', 'labels[jnx.env]']
- if: 'has labels[jnx.role]'
  group_by: ['labels[jnx.role]', 'labels[jnx.prefix]']

ratelimit:
  burst: 50
  period: 1m
  cooldown: 5m

notificaton_rules:
- if: 'attributes[owner] == "unix"'
  channels: ['googlechat:unix']

default_notification_channels:
- 'googlechat:unix'
- 'googlechat:monitoring'
- 'patlite:purple'

---

image:
  repo: ghcr.io/japannext/snooze
  tag: ""
  pullPolicy: IfNotPresent

auth_backends: {}

cacertConfigMap: ""

profiles:
- name: KernelErrors
  switch: {key: identity.process, value: kernel}
  patterns:
  - name: KernelWatchdog
    regex: "watchdog did not stop!"
    group_by:
      host: '{{ .identity.host }}'
    extra_labels:
      owner: unix
- name: SSHErrors
  switch: {key: identity.process, value: sshd}
  patterns:
  - name: SshLoginFailed
    regex: >
      Failed (?P<method>.*?) for (?P<user>.*?) from (?P<sourceIP>.*?) port (?P<port>[0-9]+) ssh2
    group_by:
      user: '{{ .capture.user }}'
    extra_labels:
      owner: cybersecurity
      user: '{{ .capture.user }}'
      sourceIP: '{{ .capture.sourceIP }}'
      authMethod: '{{ .capture.method }}'
  - name: SshKexExchanceIdentification
    regex: 'error: kex_exchange_identification: Connection closed by remote host'
    drop: true
  - name: SshConnectionReset
    regex: 'Connection reset by peer'
    drop: true
  - group_by:
      host: '{{ .identity.host }}'
    default: true
- name: HaproxyErrors
  switch: {key: identity.process, value: haproxy}
  patterns:
  - name: HaproxyServerDown
    regex: 'Server (?P<backend>.*?)/(?P<server>.*?) is DOWN, reason: (?P<reason>.*?),.*'
    identity_override:
      kind: haproxy
      backend: '{{ .capture.backend }}'
      server: '{{ .capture.server }}'
    extra_labels:
      backend: '{{ .capture.backend }}'
      reason: '{{ .capture.reason }}'
  - name: HaproxyBackendDown
    regex: >
      backend (?P<backend>.*?) has no server available!
    identity_override:
      kind: haproxy
      backend: '{{ .capture.backend }}'
- name: PacemakerErrors
  switch: {key: identity.process, value: pengine}
  patterns:
  - name: PacemakerTransitionError
    regex: 'error: Calculated transition (?P<transitions>[0-9]+) (with errors), saving inputs in (?P<path>.*)'
- name: RsyslogClientErrors
  switch: {key: identity.process, value: rsyslogd}
  patterns:
  - name: RsyslogRelpError
    regex: "omrelp.*action may not work as intended"

transform_rules: []
silence_rules: []
grouping_rules:
- name: by-service
  if: >
    has(
      log.Labels["service.name"],
      log.Labels["environment"]
    )
  group_by:
  - log.Labels["service.name"]
  - log.Labels["environment"]
- name: by-k8s-deploy
  if: >
    has(
      log.Labels["k8s.deployment.name"],
      log.Labels["k8s.namespace.name"],
      log.Labels["k8s.cluster.name"]
    )
  group_by:
  - log.Labels["k8s.deployment.name"]
  - log.Labels["k8s.namespace.name"]
  - log.Labels["k8s.cluster.name"]
- name: by-k8s-sts
  if: >
    has(
      log.Labels["k8s.statefulset.name"],
      log.Labels["k8s.namespace.name"],
      log.Labels["k8s.cluster.name"]
    )
  group_by:
  - log.Labels["k8s.statefulset.name"]
  - log.Labels["k8s.namespace.name"]
  - log.Labels["k8s.cluster.name"]
- name: by-syslog-host
  if: 'source.Kind == "syslog" && identity.kind == "host"'
  group_by:
  - identity.host
  - identity.process

ratelimit:
  burst: 50
  period: 1m
  cooldown: 5m

notification_destinations:
- if: 'labels.owner == "unix"'
  destinations:
  - {queue: mail, profile: to-unix}

default_notification_destinations:
- {queue: mail, profile: to-guillaume}

process:
  replicaCount: 2

apiserver:
  replicaCount: 2

mail:
  replicaCount: 2
  config:
    server: ""
    port: 25
    defaultSender: ""
    queue: "mail"
  profiles: []


syslog:
  replicaCount: 2
  instanceName: ""

ui:
  replicaCount: 2
  image:
    repo: ghcr.io/japannext/snooze-ui
    tag: ""
    pullPolicy: IfNotPresent

opensearch:
  enabled: true
  replicas: 3
  maxUnavailable: 1
  opensearchJavaOpts: '-Xmx2g -Xms2g'
  extraEnvs:
  - name: POD_NAME
    valueFrom: {fieldRef: {fieldPath: metadata.name}}
  - name: node.name
    value: ${POD_NAME}.opensearch-headless
  config:
    opensearch.yml: |-
      cluster.name: opensearch-cluster
      network.host: 0.0.0.0
      node.processors: 8
      plugins:
        security:
          ssl:
            transport:
              pemcert_filepath: tls/tls.crt
              pemkey_filepath: tls/tls.key
              pemtrustedcas_filepath: tls/ca.crt
              enforce_hostname_verification: false
              resolve_hostname: false
            http:
              enabled: true
              pemcert_filepath: tls/tls.crt
              pemkey_filepath: tls/tls.key
              pemtrustedcas_filepath: tls/ca.crt
          allow_unsafe_democertificates: true
          allow_default_init_securityindex: true
  sysctl:
    image:
      repo: busybox
      tag: latest
      pullPolicy: IfNotPresent

rabbitmq:
  enabled: true
  replicaCount: 3
  storageClassName: openebs-lvm-sysvg
  storageSize: 20Gi

ingress:
  enabled: false
  className: nginx
  host: ""
  dashboardHost: ""
  domain: ""
  certManager:
    enabled: false
    issuerKind: Issuer
    issuerName: default

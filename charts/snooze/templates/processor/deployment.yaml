---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-process"
  namespace: "{{ .Release.Namespace }}"
  labels:
    app.kubernetes.io/name: snooze
    app.kubernetes.io/instance: "{{ .Release.Name }}"
    app.kubernetes.io/component: process
    app.kubernetes.io/part-of: "{{ .Values.partOf }}"
spec:
  replicas: {{ .Values.process.replicaCount }}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
  selector:
    matchLabels:
      app.kubernetes.io/name: snooze
      app.kubernetes.io/instance: "{{ .Release.Name }}"
      app.kubernetes.io/component: process
  template:
    metadata:
      labels:
        app.kubernetes.io/name: snooze
        app.kubernetes.io/instance: "{{ .Release.Name }}"
        app.kubernetes.io/component: process
        app.kubernetes.io/part-of: "{{ .Values.partOf }}"
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/config.yaml") . | sha256sum }}
        checksum/pipeline: {{ include (print $.Template.BasePath "/pipeline.yaml") . | sha256sum }}
        {{- if .Values.podAnnotations }}
        {{- toYaml .Values.podAnnotations | nindent 8 }}
        {{- end }}
    spec:
      containers:
      - name: snooze-process
        image: "{{- include "snooze.image" . | trim }}"
        imagePullPolicy: "{{ .Values.image.pullPolicy }}"
        args:
        - processor
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        env:
        {{- include "snooze.env" . | nindent 8 }}
        {{- include "snooze.rabbitmqEnv" . | nindent 8 }}
        envFrom:
        - configMapRef:
            name: "{{ .Release.Name }}-common"
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 1
          periodSeconds: 1
          successThreshold: 1
          timeoutSeconds: 1
        livenessProbe:
          httpGet:
            path: /livez
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 1
          periodSeconds: 1
          successThreshold: 1
          timeoutSeconds: 1
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          runAsNonRoot: true
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - name: pipeline
          mountPath: /etc/snooze/
      volumes:
      - name: pipeline
        configMap:
          name: "{{ .Release.Name }}-pipeline"
